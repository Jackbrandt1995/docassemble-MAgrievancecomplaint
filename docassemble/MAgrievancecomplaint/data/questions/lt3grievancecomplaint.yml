---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
metadata:
  title: >-
    Grievance Complaint
  short title: >-
    Grievance Complaint
  description: |-
    This interview helps someone in Massachusetts write a Grievance Complaint.
  can_I_use_this_form: |
    If you are a tenant in public housing, you can use this interview to write a grievance complaint.
  before_you_start: |
    This interview will help you write a Grievance Complaint.
    
    Before you get started, please gather:
    
    1. Your address
    2. The facts of your complaint
    3. The action you are requesting 
    
    When you are finished, you will need to:
    
    1. Download your complaint
    2. Print your complaint
    3. Deliver your complaint to your housing authority office
  maturity: production
  estimated_completion_minutes: 60
  estimated_completion_delta: 30
  LIST_topics: 
    - "HO-00-00-00-00"
    - "HO-03-00-00-00"
  tags:
    - "HO-00-00-00-00"
    - "HO-03-00-00-00"
  authors:
    - Jack Brandt
  original_form: []
  original_form_published_on: ""
  help_page_url: >-
    https://www.masslegalhelp.org/housing-apartments-shelter/public-subsidized-housing/sample-letters-forms-and-worksheets
  help_page_title: >-
    MassLegalHelp
  allowed_courts: []
  typical_role: "plaintiff"
  al_weaver_version: "1.10.3"
  generated_on: "2024-09-05"
  languages:
    - en
  jurisdiction: NAM-US-US+MA
  review_date: 2024-09-05
  form_titles:
    - Grievance Complaint
  form_numbers: []
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "MA"
---
code: |
  github_repo_name =  'docassemble-Lt3Grievancecomplaint'
---
code: |
  interview_short_title = "Write a Grievance Complaint"
---
code: |
  al_form_type = "letter" 
---
objects:
  - users: ALPeopleList.using(there_are_any=True)
---
sections:
  - review_lt3grievancecomplaint: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_lt3grievancecomplaint
code: |
  # Set the allowed courts for this interview
  nav.set_section("review_lt3grievancecomplaint")
  user_role = "plaintiff"
  user_ask_role = "plaintiff"
  users.gather()
  set_parts(subtitle=str(users))
  users[0].address.address
  complaint_facts
  set_progress(25)
  action_requested
  signature_date
  interview_order_lt3grievancecomplaint = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  lt3grievancecomplaint_intro
  interview_order_lt3grievancecomplaint
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  lt3grievancecomplaint_download
---
id: Grievance_Complaint
continue button field: lt3grievancecomplaint_intro
question: |
  Grievance Complaint
subquestion: |
  This interview will help you write a Grievance Complaint.
  
  Before you get started, please gather:
  
  1. Your address
  2. The facts of your complaint
  3. The action you are requesting 
  
  When you are finished, you will need to:
  
  1. Download your complaint
  2. Print your complaint
  3. Deliver your complaint to your housing authority office

  If you are a tenant in public housing, you can use this interview to write a grievance complaint.

  Most people take about 15 minutes to complete this interview.
---
id: Action Requested
question: |
  Action Requested
subquestion: |
  What action do you want the housing authority to take to remedy your complaint?
fields:
  - "Action requested": action_requested
---
id: Complaint Facts
question: |
  Complaint Facts
subquestion: |
  Write out the facts that apply to your complaint.
fields:
  - "Complaint facts": complaint_facts
---
id: preview lt3grievancecomplaint
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_recipient_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_lt3grievancecomplaint'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: lt3grievancecomplaint_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
id: lt3grievancecomplaint review screen
event: review_lt3grievancecomplaint
question: |
  Review your answers
review:
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: signature_date
    button: |
      **Date of Signature**:
      ${ signature_date }
  - Edit: action_requested
    button: |
      **Action requested**:
      ${ action_requested }
  - Edit: complaint_facts
    button: |
      **Complaint facts**:
      ${ complaint_facts }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - address.address
  - signature
  - name.first
confirm: True

---
id: download lt3grievancecomplaint
event: lt3grievancecomplaint_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_lt3grievancecomplaint'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - lt3grievancecomplaint_Post_interview_instructions: ALDocument.using(title="Instructions", filename="lt3grievancecomplaint_next_steps.docx", enabled=True, has_addendum=False)
  - lt3grievancecomplaint_attachment: ALDocument.using(title="Grievance Complaint", filename="lt3grievancecomplaint", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[lt3grievancecomplaint_Post_interview_instructions, lt3grievancecomplaint_attachment], filename="lt3grievancecomplaint", title="All forms to download for your records", enabled=True)
  - al_recipient_bundle: ALDocumentBundle.using(elements=[lt3grievancecomplaint_attachment],  filename="lt3grievancecomplaint", title="All forms to file", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: lt3grievancecomplaint_next_steps
  docx template file: lt3grievancecomplaint_next_steps.docx
  variable name: lt3grievancecomplaint_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: lt3grievancecomplaint
  filename: lt3grievancecomplaint
  variable name: lt3grievancecomplaint_attachment[i]
  skip undefined: True
  docx template file: lt3grievancecomplaint.docx
  tagged pdf: True



